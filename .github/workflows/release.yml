name: Release

on:
  release:
    types:
      - created

env:
  OCI_REGISTRY: ghcr.io
  OCI_IMAGE_NAME: ${{ github.repository }}
  # DOCKER_CONTENT_TRUST: '1'

jobs:
  build-n-push-digest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/arm64
          - linux/amd64

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Extract container metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to image registry ${{ env.OCI_REGISTRY }}
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ env.OCI_REGISTRY }}
          username: ${{ secrets.OCI_REGISTRY_USER }}
          password: ${{ secrets.OCI_REGISTRY_TOKEN }}

      # - name: Load docker trusted certificate
      #   run: |
      #     export DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE="${{ secrets.DOCKER_PRIVATE_KEY_PASSPHRASE }}"
      #     base64 -d <<< "${{ secrets.DOCKER_PRIVATE_KEY }}" >> ${{ secrets.DOCKER_PRIVATE_KEY_ID}}.key
      #     base64 -d <<< "${{ secrets.DOCKER_PUBLIC_KEY }}" >> rwillians.key
      #
      #     docker trust key load rwillians.key --name rwillians
      #     docker trust signer add --key rwillians.pub rwillians ${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: mode=max
          sbom: true
          outputs: type=image,name=${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }},push-by-digest=true,name-canonical=true
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs: [build-n-push-digest]
    steps:
      - name: Download digests
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
          labels: |
            org.opencontainers.image.title="rwillians/pg"
            org.opencontainers.image.description="Managed PostgreSQL made easy."
            org.opencontainers.image.licenses="MIT"
            org.opencontainers.image.documentation="https://github.com/rwillians/pg/blob/main/README.md"
            org.opencontainers.image.source="https://github.com/rwillians/pg"
            org.opencontainers.image.url="https://github.com/rwillians/pg/pkgs/container/pg"
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Login to image registry ${{ env.OCI_REGISTRY }}
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ${{ env.OCI_REGISTRY }}
          username: ${{ secrets.OCI_REGISTRY_USER }}
          password: ${{ secrets.OCI_REGISTRY_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            $(echo $DOCKER_METADATA_OUTPUT_JSON | jq -cr '.tags | map("-t " + .) | join(" ")') \
            $(echo $DOCKER_METADATA_OUTPUT_JSON | jq -r '.annotations | map("--annotation \"" + . + "\"") | join(" ")') \
            $(printf '${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}@sha256:%s' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect \
            ${{ env.OCI_REGISTRY }}/${{ env.OCI_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
